#
msgid ""
msgstr ""
"Project-Id-Version: 0.1\n"
"POT-Creation-Date: 2021-07-22 19:44:22.339558\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"

#: game_config
msgid "Graphs game"
msgstr ""

#: intro
msgid ""
"# The Natural Number Game, version 1.3.3\n"
"## By Kevin Buzzard and Mohammad Pedramfar. \n"
"# What is this game?\n"
"Welcome to the natural number game -- a part-book part-game which shows the "
"power of induction.\n"
"Blue nodes on the graph are ones that you are ready to enter. Grey nodes you "
"should stay away\n"
"from -- a grey node turns blue when *all* nodes above it are complete. Green "
"nodes are completed.\n"
"(Actually you can try any level at any time, but you might not know enough "
"to complete it if it's grey).\n"
"In this game, you get own version of the natural numbers, called `mynat`, in "
"an interactive\n"
"theorem prover called Lean. Your version of the natural numbers satisfies "
"something called\n"
"the principle of mathematical induction, and a couple of other things too "
"(Peano's axioms).\n"
"Unfortunately, nobody has proved any theorems about these\n"
"natural numbers yet! For example, addition will be defined for you,\n"
"but nobody has proved that `x + y = y + x` yet. This is your job. You're "
"going to\n"
"prove mathematical theorems using the Lean theorem prover. In other words, "
"you're going to solve\n"
"levels in a computer game.\n"
"You're going to prove these theorems using *tactics*. The introductory "
"world, Tutorial World,\n"
"will take you through some of these tactics. During your proofs, your \"goal"
"\" (i.e. what you're\n"
"supposed to be proving) will be displayed with  a `⊢` symbol in front of it. "
"If the top\n"
"right hand box reports \"Theorem Proved!\", you have closed all the goals in "
"the level\n"
"and can move on to the next level in the world you're in. When you've "
"finished a world,\n"
"hit \"main menu\" in the top left to get back here.\n"
"For more info, see the <a href=\"http://wwwf.imperial.ac.uk/~buzzard/xena/"
"natural_number_game/FAQ.html\" target=\"blank\">FAQ</a>.\n"
"# What's new in v1.3?\n"
"The game now saves your progress! Thanks to everyone who asked for it,\n"
"and to Mohammad for making it happen :-)\n"
"Cute little clipboard to copy your solutions.\n"
"# Thanks\n"
"Special thanks to Rob Lewis for tactic hackery, Bryan Gin-Ge Chen for\n"
"javascript hackery, Patrick Massot for his\n"
"<a href=\"https://github.com/leanprover-community/format_lean\" target="
"\"blank\">Lean to html formatter</a>,\n"
"Sian Carey for Power World,\n"
"and, last but not least, all the people who fed back comments, including\n"
"the 2019-20 Imperial College 1st year maths beta tester students, Marie-"
"Amélie Lawn,\n"
"Toby Gee, Joseph Myers, and all the people who have been in touch\n"
"via the <a href=\"https://leanprover.zulipchat.com/\" target=\"blank\">Lean "
"Zulip chat</a>\n"
" or the <a href=\"https://xenaproject.wordpress.com/\" target=\"blank\">Xena "
"Project blog</a>\n"
" or via <a href=\"https://twitter.com/XenaProject\" target=\"blank"
"\">Twitter</a>.\n"
"The natural number game is brought to you by the Xena project, a project "
"based at Imperial College London\n"
"whose aim is to get mathematics undergraduates using computer theorem "
"provers.\n"
"Lean is a computer theorem prover being developed at Microsoft Research.\n"
"Prove a theorem. Write a function. <a href=\"https://twitter.com/XenaProject"
"\" target=\"blank\">@XenaProject</a>.\n"
msgstr ""

#: world_config
msgid "Morphisms world"
msgstr ""

#: Morphisms world level 1
msgid ""
"We begin by defining a graph as a triple:\n"
"- vertices;\n"
"- edges;\n"
"- and an endpoint map taking each edge to the unordered pair of its "
"endpoints.\n"
msgstr ""

#: Morphisms world level 1
msgid "This theorem is a sanity check to see that sym2 works as we want.\n"
msgstr ""

#: Morphisms world level 1
msgid "Now we can define adjacency.\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"We now define a morphism of graphs to be a triple:\n"
"- a map on vertices;\n"
"- a map on edges;\n"
"- and a compatability condition between the two maps.\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"I want a convenient infix notation for a morphism.\n"
"I tried to overload the usual → arrow, but Lean got confused\n"
"(or probably I did it incorrectly).\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"We want to define composition of morphisms, but we need to prove that the\n"
"compatability condition needed holds when we do the `obvious' thing ...\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"Now that we know the compatability condition holds, we can go ahead and \n"
"define composition of morphisms.\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"We want a convenient infix operator for composition of morphisms.\n"
"After my experience of trying to overload → I decided not to even attempt\n"
"to overload ∘.\n"
msgstr ""

#: Morphisms world level 1
msgid "Proving associativity of composition is now trivial ...\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"We want to define the identity morphism, but that requires a compatability "
"proof.\n"
msgstr ""

#: Morphisms world level 1
msgid "Now we can define the identity morphism.\n"
msgstr ""

#: Morphisms world level 1
msgid "Next we turn our attention to defining an isomorphism.\n"
msgstr ""

#: Morphisms world level 1
msgid "This is a sanity check: proving that the identity is an isomorphism.\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"Proving equality on structures is a pain, so we should prove an "
"extensionality\n"
"theorem.  Basically, it suffices for the respective vertex maps and edge "
"maps to \n"
"be equal.\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"The next two are helpful so that we don't have to keep repeating silly "
"proofs.\n"
"Basically, we show that equal morphisms have equal vertex maps and edge "
"maps.\n"
msgstr ""

#: Morphisms world level 1
msgid ""
"Our final two results are proving that a morphism is an isomorphism if and\n"
"only if the vertex map and edge map are both bijective.  Of course, we are\n"
"leaning very heavily on the corresponding results for functions.\n"
msgstr ""
